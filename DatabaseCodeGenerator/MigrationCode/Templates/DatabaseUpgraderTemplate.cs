// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DatabaseCodeGenerator.MigrationCode.Templates
{
    using System.Linq;
    using Schema;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class DatabaseUpgraderTemplate : DatabaseUpgraderTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 1 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//-------------------------------------------------------------------------------"));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 2 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//                                                                               "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 3 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//    This code was automatically generated.                                     "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 4 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//    Changes to this file may cause incorrect behavior and will be lost if      "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 5 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//    the code is regenerated.                                                   "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 6 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//                                                                               "));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 7 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\GeneratedCodeWarning.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("//-------------------------------------------------------------------------------"));
            
            #line default
            #line hidden
            this.Write("\r\n\r\nusing ");
            
            #line 6 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Context.Namespace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 6 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\nnamespace ");
            
            #line 8 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.RootNamespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public partial class ");
            
            #line 10 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DatabaseUpgraderClassName));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        public ");
            
            #line 12 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DatabaseUpgraderClassName));
            
            #line default
            #line hidden
            this.Write(@"(IJsonSerializer jsonSerializer, IDataStorage storage)
        {
            _serializer = jsonSerializer;
            _storage = storage;
        }

        public void Upgrade(IContentLoader result)
        {
            var major = _storage.Version.Major;
            var minor = _storage.Version.Minor;

            if (major == 0)
            {
                major = ");
            
            #line 25 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(VersionList.Items.First().Major));
            
            #line default
            #line hidden
            this.Write(";\r\n                minor = 0;\r\n            }\r\n            \r\n            if (!IsVa" +
                    "lidVersion(major, minor))\r\n                throw new DatabaseException($\"invalid" +
                    " database version: {major}.{minor}\");\r\n\r\n");
            
            #line 32 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

        var lastVersion = new SchemaVersion();
		foreach (var schemaVersion in VersionList.Items)
        {

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 37 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 37 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(".DatabaseContent content");
            
            #line 37 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(" = null;\r\n            if (major <= ");
            
            #line 38 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(")\r\n");
            
            #line 39 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

            if (lastVersion.IsNull)
            {

            
            #line default
            #line hidden
            this.Write("            {\r\n                content");
            
            #line 44 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 44 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 44 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(".DatabaseContent(_serializer, _storage);\r\n                content");
            
            #line 45 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(".VersionMajor = major;\r\n                content");
            
            #line 46 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(".VersionMinor = minor;\r\n                var upgrader = new ");
            
            #line 47 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".DatabaseUpgrader(content");
            
            #line 47 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(");\r\n                upgrader.UpgradeMinor();\r\n            }\r\n\r\n");
            
            #line 51 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

            }
            else 
            {

            
            #line default
            #line hidden
            this.Write("                content");
            
            #line 56 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(" = MigrateFrom(content");
            
            #line 56 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.Major));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 58 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

            }
            lastVersion = schemaVersion;
        }

            
            #line default
            #line hidden
            this.Write("\r\n            content");
            
            #line 64 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.Major));
            
            #line default
            #line hidden
            this.Write(".Export(result);\r\n        }\r\n\r\n        private bool IsValidVersion(int major, int" +
                    " minor)\r\n        {\r\n");
            
            #line 69 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

        lastVersion = new SchemaVersion();
		foreach (var schemaVersion in VersionList.Items)
        {

            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 74 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.IsNull ? "if" : "else if"));
            
            #line default
            #line hidden
            this.Write(" (major == ");
            
            #line 74 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(")\r\n                return minor >= 0 && minor <= ");
            
            #line 75 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Minor));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 76 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

            lastVersion = schemaVersion;
        }

            
            #line default
            #line hidden
            this.Write("\r\n            return false;\r\n        }\r\n\r\n");
            
            #line 84 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

    lastVersion = new SchemaVersion();
	foreach (var schemaVersion in VersionList.Items)
    {
        if (!lastVersion.IsNull)
        {

            
            #line default
            #line hidden
            this.Write("        private ");
            
            #line 91 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 91 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(".DatabaseContent MigrateFrom(");
            
            #line 91 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 91 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(".DatabaseContent contentOld)\r\n        {\r\n            ");
            
            #line 93 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".Storage.DatabaseContent content;\r\n            if (contentOld == null)\r\n         " +
                    "       content = new ");
            
            #line 95 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 95 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(".DatabaseContent(_serializer, _storage);\r\n            else\r\n            {\r\n      " +
                    "          content = new ");
            
            #line 98 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 98 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(".DatabaseContent(_serializer, null);\r\n                contentOld.Export(content);" +
                    "\r\n                content.VersionMajor = ");
            
            #line 100 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(";\r\n                content.VersionMinor = 0;\r\n            }\r\n\r\n            var up" +
                    "grader = new ");
            
            #line 104 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".DatabaseUpgrader(content);\r\n            upgrader.UpgradeMajor(contentOld);\r\n    " +
                    "        upgrader.UpgradeMinor();\r\n\r\n            return content;\r\n        }\r\n\r\n");
            
            #line 111 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

        }
        lastVersion = schemaVersion;
    }

            
            #line default
            #line hidden
            this.Write("        private readonly IDataStorage _storage;\r\n        private readonly IJsonSe" +
                    "rializer _serializer;\r\n    }\r\n\r\n");
            
            #line 120 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

lastVersion = new SchemaVersion();
foreach (var schemaVersion in VersionList.Items)
{

            
            #line default
            #line hidden
            this.Write("    namespace ");
            
            #line 125 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        public partial class ");
            
            #line 127 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DatabaseUpgraderClassName));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            public ");
            
            #line 129 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.DatabaseUpgraderClassName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 129 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(".DatabaseContent content)\r\n            {\r\n                Content = content;\r\n   " +
                    "             var major = content.VersionMajor;\r\n                var minor = cont" +
                    "ent.VersionMinor;\r\n\r\n                if (major != ");
            
            #line 135 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Major));
            
            #line default
            #line hidden
            this.Write(" || minor < 0 || minor > ");
            
            #line 135 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(schemaVersion.Minor));
            
            #line default
            #line hidden
            this.Write(")\r\n                    throw new DatabaseException($\"invalid database version: {m" +
                    "ajor}.{minor}\");\r\n            }\r\n\r\n");
            
            #line 139 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

            if (!lastVersion.IsNull)
            {

            
            #line default
            #line hidden
            this.Write("            public void UpgradeMajor(");
            
            #line 143 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".Storage.DatabaseContent oldContent)\r\n            {\r\n                if (oldConte" +
                    "nt.VersionMajor != ");
            
            #line 145 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.Major));
            
            #line default
            #line hidden
            this.Write(" || oldContent.VersionMinor != ");
            
            #line 145 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.Minor));
            
            #line default
            #line hidden
            this.Write(")\r\n                    throw new DatabaseException($\"invalid database version: {o" +
                    "ldContent.VersionMajor}.{oldContent.VersionMinor}\");\r\n\r\n                MigrateF" +
                    "rom_");
            
            #line 148 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write("(oldContent);\r\n            }\r\n\r\n");
            
            #line 151 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("            public void UpgradeMinor()\r\n            {\r\n");
            
            #line 156 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

                for (var i = 0; i < schemaVersion.Minor; ++i)
                {

            
            #line default
            #line hidden
            this.Write("                if (Content.VersionMinor == ");
            
            #line 160 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(")\r\n                {\r\n                    Migrate_");
            
            #line 162 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 162 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1));
            
            #line default
            #line hidden
            this.Write("();\r\n                    Content.VersionMinor = ");
            
            #line 163 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1));
            
            #line default
            #line hidden
            this.Write(";\r\n                }\r\n");
            
            #line 165 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

                }

            
            #line default
            #line hidden
            this.Write("            }\r\n\r\n");
            
            #line 170 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

            if (!lastVersion.IsNull) 
            {

            
            #line default
            #line hidden
            this.Write("            partial void MigrateFrom_");
            
            #line 174 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 174 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(lastVersion.ToNamespace()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 174 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(".DatabaseContent contentOld);\r\n");
            
            #line 175 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

            }

            for (var i = 0; i < schemaVersion.Minor; ++i)
            {

            
            #line default
            #line hidden
            this.Write("            partial void Migrate_");
            
            #line 181 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 181 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+1));
            
            #line default
            #line hidden
            this.Write("();\r\n");
            
            #line 182 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("\r\n            protected ");
            
            #line 186 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Utils.StorageNamespace));
            
            #line default
            #line hidden
            this.Write(".DatabaseContent Content { get; }\r\n        }\r\n    }\r\n");
            
            #line 189 "D:\Projects\event-horizon-main\Assets\Modules\Database\.CodeGenerator\DatabaseCodeGenerator\MigrationCode\Templates\DatabaseUpgraderTemplate.tt"

    lastVersion = schemaVersion;
}

            
            #line default
            #line hidden
            this.Write("}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public class DatabaseUpgraderTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
